import { NS, Server } from "../types/NetscriptDefinitions/index"


export async function main(ns: NS) {
    ns.disableLog("sleep")
    eval("window.setTimeoutOri = window.setTimeout")
    const oldFn = eval("window.setTimeout.bind(window)")

    const newFn = function (handler: TimerHandler, timeout?: number, ...args: any[]): number {
        if (eval("window.skipTimeoutHack")) {
            eval("window.skipTimeoutHack = false")
            return oldFn(handler, timeout, ...args)
        }
        return oldFn(handler, Math.min(1000, timeout ?? 0), ...args) 
    }

    eval("window.setTimeout = newFn")

    ns.atExit(() => eval("window.setTimeout = window.setTimeoutOri"))

    while(true) {
        eval("window.skipTimeoutHack = true")
        await ns.sleep(24 * 60 * 60 * 1000)
    }
}
